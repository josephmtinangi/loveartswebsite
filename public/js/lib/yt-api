"use strict";

angular.module("yt-api", [])
    .factory('ytApi', ['$http', 'youtubeSearchDataService', function ($http, youtubeSearchDataService) {

        var youtubeFactory = {};

        youtubeFactory.getVideosFromPlaylistById = function (_params) {
            var youtubeSearchData = youtubeSearchDataService.getNew("videosFromPlaylistById", _params);
            return $http({
                method: 'GET',
                url: youtubeSearchData.url,
                params: youtubeSearchData.object,
            });
        };

        youtubeFactory.getPlaylistById = function (_params) {
            var youtubeSearchData = youtubeSearchDataService.getNew("playlistById", _params);
            return $http({
                method: 'GET',
                url: youtubeSearchData.url,
                params: youtubeSearchData.object,
            });
        };

        return youtubeFactory;
    }])
    .service('youtubeSearchDataService', function () {
        this.getApiBaseUrl = function (_params) {
            return "https://content.googleapis.com/youtube/v3/";
        };

        this.fillDataInObjectByList = function (_object, _params, _list) {

            angular.forEach(_list, function (value, key) {
                if (typeof value !== "undefined"  && value.constructor === Array) {
                    if (angular.isDefined(_params[value[0]])) {
                        _object.object[value[0]] = _params[value[0]];
                    } else {
                        _object.object[value[0]] = value[1];
                    }
                } else {
                    if (angular.isDefined(_params[value])) {
                        _object.object[value] = _params[value];
                    }
                }
            });

            return _object;
        };

        this.getNew = function (_type, _params) {

            var youtubeSearchData = {
                object: {
                    key: _params.key,
                },
                url: '',
            };

            switch (_type) {
                case 'videosFromPlaylistById':

                    youtubeSearchData = this.fillDataInObjectByList(youtubeSearchData, _params, [
                        ['part', 'id,snippet'],
                        ['type', 'video'],
                        'playlistId',
                        'maxResults',
                        'fields'
                    ]);

                    youtubeSearchData.url = this.getApiBaseUrl() + 'playlistItems?';
                    if (_params.nextPageToken || _params.prevPageToken) {
                        youtubeSearchData.url += 'pageToken=' + (_params.nextPageToken || _params.prevPageToken) + '&';
                    }
                    break;

                case 'playlistById':
                    youtubeSearchData = this.fillDataInObjectByList(youtubeSearchData, _params, [
                        ['part', 'id,snippet'],
                        ['type', 'playlist']
                    ]);

                    youtubeSearchData.url = this.getApiBaseUrl() + 'search?';
                    if (_params.nextPageToken || _params.prevPageToken) {
                        youtubeSearchData.url += 'pageToken=' + (_params.nextPageToken || _params.prevPageToken) + '&';
                    }
                    break;
            }

            return youtubeSearchData;
        };
    });
